// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: v1/cmd.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Cmd:
	//
	//	*Command_Store
	//	*Command_LatestUid
	//	*Command_ResetCache
	//	*Command_AppendEntries
	//	*Command_RequestVote
	//	*Command_InstallSnapshot
	//	*Command_TimeoutNow
	Cmd isCommand_Cmd `protobuf_oneof:"cmd"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_cmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_v1_cmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_v1_cmd_proto_rawDescGZIP(), []int{0}
}

func (m *Command) GetCmd() isCommand_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (x *Command) GetStore() *Store {
	if x, ok := x.GetCmd().(*Command_Store); ok {
		return x.Store
	}
	return nil
}

func (x *Command) GetLatestUid() *LatestUid {
	if x, ok := x.GetCmd().(*Command_LatestUid); ok {
		return x.LatestUid
	}
	return nil
}

func (x *Command) GetResetCache() *ResetCache {
	if x, ok := x.GetCmd().(*Command_ResetCache); ok {
		return x.ResetCache
	}
	return nil
}

func (x *Command) GetAppendEntries() *AppendEntriesRequest {
	if x, ok := x.GetCmd().(*Command_AppendEntries); ok {
		return x.AppendEntries
	}
	return nil
}

func (x *Command) GetRequestVote() *RequestVoteRequest {
	if x, ok := x.GetCmd().(*Command_RequestVote); ok {
		return x.RequestVote
	}
	return nil
}

func (x *Command) GetInstallSnapshot() *InstallSnapshotRequest {
	if x, ok := x.GetCmd().(*Command_InstallSnapshot); ok {
		return x.InstallSnapshot
	}
	return nil
}

func (x *Command) GetTimeoutNow() *TimeoutNowRequest {
	if x, ok := x.GetCmd().(*Command_TimeoutNow); ok {
		return x.TimeoutNow
	}
	return nil
}

type isCommand_Cmd interface {
	isCommand_Cmd()
}

type Command_Store struct {
	Store *Store `protobuf:"bytes,1,opt,name=store,proto3,oneof"`
}

type Command_LatestUid struct {
	LatestUid *LatestUid `protobuf:"bytes,2,opt,name=latest_uid,json=latestUid,proto3,oneof"`
}

type Command_ResetCache struct {
	ResetCache *ResetCache `protobuf:"bytes,8,opt,name=reset_cache,json=resetCache,proto3,oneof"`
}

type Command_AppendEntries struct {
	AppendEntries *AppendEntriesRequest `protobuf:"bytes,3,opt,name=append_entries,json=appendEntries,proto3,oneof"`
}

type Command_RequestVote struct {
	RequestVote *RequestVoteRequest `protobuf:"bytes,4,opt,name=request_vote,json=requestVote,proto3,oneof"`
}

type Command_InstallSnapshot struct {
	InstallSnapshot *InstallSnapshotRequest `protobuf:"bytes,5,opt,name=install_snapshot,json=installSnapshot,proto3,oneof"`
}

type Command_TimeoutNow struct {
	TimeoutNow *TimeoutNowRequest `protobuf:"bytes,6,opt,name=timeout_now,json=timeoutNow,proto3,oneof"`
}

func (*Command_Store) isCommand_Cmd() {}

func (*Command_LatestUid) isCommand_Cmd() {}

func (*Command_ResetCache) isCommand_Cmd() {}

func (*Command_AppendEntries) isCommand_Cmd() {}

func (*Command_RequestVote) isCommand_Cmd() {}

func (*Command_InstallSnapshot) isCommand_Cmd() {}

func (*Command_TimeoutNow) isCommand_Cmd() {}

type CommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// error message in case of error
	Error string `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are assignable to Resp:
	//
	//	*CommandResponse_Store
	//	*CommandResponse_LatestUid
	//	*CommandResponse_ResetCache
	//	*CommandResponse_AppendEntries
	//	*CommandResponse_RequestVote
	//	*CommandResponse_InstallSnapshot
	//	*CommandResponse_TimeoutNow
	Resp isCommandResponse_Resp `protobuf_oneof:"resp"`
}

func (x *CommandResponse) Reset() {
	*x = CommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_cmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResponse) ProtoMessage() {}

func (x *CommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_cmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResponse.ProtoReflect.Descriptor instead.
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return file_v1_cmd_proto_rawDescGZIP(), []int{1}
}

func (x *CommandResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (m *CommandResponse) GetResp() isCommandResponse_Resp {
	if m != nil {
		return m.Resp
	}
	return nil
}

func (x *CommandResponse) GetStore() *StoreResponse {
	if x, ok := x.GetResp().(*CommandResponse_Store); ok {
		return x.Store
	}
	return nil
}

func (x *CommandResponse) GetLatestUid() *LatestUidResponse {
	if x, ok := x.GetResp().(*CommandResponse_LatestUid); ok {
		return x.LatestUid
	}
	return nil
}

func (x *CommandResponse) GetResetCache() *ResetCacheResponse {
	if x, ok := x.GetResp().(*CommandResponse_ResetCache); ok {
		return x.ResetCache
	}
	return nil
}

func (x *CommandResponse) GetAppendEntries() *AppendEntriesResponse {
	if x, ok := x.GetResp().(*CommandResponse_AppendEntries); ok {
		return x.AppendEntries
	}
	return nil
}

func (x *CommandResponse) GetRequestVote() *RequestVoteResponse {
	if x, ok := x.GetResp().(*CommandResponse_RequestVote); ok {
		return x.RequestVote
	}
	return nil
}

func (x *CommandResponse) GetInstallSnapshot() *InstallSnapshotResponse {
	if x, ok := x.GetResp().(*CommandResponse_InstallSnapshot); ok {
		return x.InstallSnapshot
	}
	return nil
}

func (x *CommandResponse) GetTimeoutNow() *TimeoutNowResponse {
	if x, ok := x.GetResp().(*CommandResponse_TimeoutNow); ok {
		return x.TimeoutNow
	}
	return nil
}

type isCommandResponse_Resp interface {
	isCommandResponse_Resp()
}

type CommandResponse_Store struct {
	Store *StoreResponse `protobuf:"bytes,1,opt,name=store,proto3,oneof"`
}

type CommandResponse_LatestUid struct {
	LatestUid *LatestUidResponse `protobuf:"bytes,2,opt,name=latest_uid,json=latestUid,proto3,oneof"`
}

type CommandResponse_ResetCache struct {
	ResetCache *ResetCacheResponse `protobuf:"bytes,8,opt,name=reset_cache,json=resetCache,proto3,oneof"`
}

type CommandResponse_AppendEntries struct {
	AppendEntries *AppendEntriesResponse `protobuf:"bytes,3,opt,name=append_entries,json=appendEntries,proto3,oneof"`
}

type CommandResponse_RequestVote struct {
	RequestVote *RequestVoteResponse `protobuf:"bytes,4,opt,name=request_vote,json=requestVote,proto3,oneof"`
}

type CommandResponse_InstallSnapshot struct {
	InstallSnapshot *InstallSnapshotResponse `protobuf:"bytes,5,opt,name=install_snapshot,json=installSnapshot,proto3,oneof"`
}

type CommandResponse_TimeoutNow struct {
	TimeoutNow *TimeoutNowResponse `protobuf:"bytes,6,opt,name=timeout_now,json=timeoutNow,proto3,oneof"`
}

func (*CommandResponse_Store) isCommandResponse_Resp() {}

func (*CommandResponse_LatestUid) isCommandResponse_Resp() {}

func (*CommandResponse_ResetCache) isCommandResponse_Resp() {}

func (*CommandResponse_AppendEntries) isCommandResponse_Resp() {}

func (*CommandResponse_RequestVote) isCommandResponse_Resp() {}

func (*CommandResponse_InstallSnapshot) isCommandResponse_Resp() {}

func (*CommandResponse_TimeoutNow) isCommandResponse_Resp() {}

type Store struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// optional key only used in case of KVCache
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Store) Reset() {
	*x = Store{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_cmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Store) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Store) ProtoMessage() {}

func (x *Store) ProtoReflect() protoreflect.Message {
	mi := &file_v1_cmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Store.ProtoReflect.Descriptor instead.
func (*Store) Descriptor() ([]byte, []int) {
	return file_v1_cmd_proto_rawDescGZIP(), []int{2}
}

func (x *Store) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Store) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type StoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *StoreResponse) Reset() {
	*x = StoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_cmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreResponse) ProtoMessage() {}

func (x *StoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_cmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreResponse.ProtoReflect.Descriptor instead.
func (*StoreResponse) Descriptor() ([]byte, []int) {
	return file_v1_cmd_proto_rawDescGZIP(), []int{3}
}

func (x *StoreResponse) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type LatestUid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LatestUid) Reset() {
	*x = LatestUid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_cmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestUid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestUid) ProtoMessage() {}

func (x *LatestUid) ProtoReflect() protoreflect.Message {
	mi := &file_v1_cmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestUid.ProtoReflect.Descriptor instead.
func (*LatestUid) Descriptor() ([]byte, []int) {
	return file_v1_cmd_proto_rawDescGZIP(), []int{4}
}

type LatestUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *LatestUidResponse) Reset() {
	*x = LatestUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_cmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestUidResponse) ProtoMessage() {}

func (x *LatestUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_cmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestUidResponse.ProtoReflect.Descriptor instead.
func (*LatestUidResponse) Descriptor() ([]byte, []int) {
	return file_v1_cmd_proto_rawDescGZIP(), []int{5}
}

func (x *LatestUidResponse) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ResetCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetCache) Reset() {
	*x = ResetCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_cmd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCache) ProtoMessage() {}

func (x *ResetCache) ProtoReflect() protoreflect.Message {
	mi := &file_v1_cmd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCache.ProtoReflect.Descriptor instead.
func (*ResetCache) Descriptor() ([]byte, []int) {
	return file_v1_cmd_proto_rawDescGZIP(), []int{6}
}

type ResetCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ResetCacheResponse) Reset() {
	*x = ResetCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_cmd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCacheResponse) ProtoMessage() {}

func (x *ResetCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_cmd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCacheResponse.ProtoReflect.Descriptor instead.
func (*ResetCacheResponse) Descriptor() ([]byte, []int) {
	return file_v1_cmd_proto_rawDescGZIP(), []int{7}
}

func (x *ResetCacheResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_v1_cmd_proto protoreflect.FileDescriptor

var file_v1_cmd_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x76, 0x31, 0x2f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x71, 0x75, 0x61, 0x73, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x0d, 0x76, 0x31, 0x2f, 0x72, 0x61,
	0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x03, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x75, 0x61, 0x73, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x35,
	0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x71, 0x75, 0x61, 0x73, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x55, 0x69, 0x64, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x55, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x75, 0x61,
	0x73, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12,
	0x48, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x75, 0x61, 0x73, 0x61, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x71, 0x75, 0x61, 0x73, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x4e, 0x0a,
	0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x71, 0x75, 0x61, 0x73, 0x61, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x3f, 0x0a,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x71, 0x75, 0x61, 0x73, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4e, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4e, 0x6f, 0x77, 0x42, 0x05,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x22, 0x85, 0x04, 0x0a, 0x0f,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x61, 0x73, 0x61, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x71, 0x75,
	0x61, 0x73, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x55, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x55, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x75,
	0x61, 0x73, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x71, 0x75, 0x61, 0x73, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x76,
	0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x75, 0x61, 0x73,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x71, 0x75, 0x61, 0x73, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x71, 0x75, 0x61, 0x73, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x4e, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4e, 0x6f, 0x77, 0x42, 0x06, 0x0a, 0x04, 0x72,
	0x65, 0x73, 0x70, 0x22, 0x2d, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x21, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x0b, 0x0a, 0x09, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x55,
	0x69, 0x64, 0x22, 0x25, 0x0a, 0x11, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x55, 0x69, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x0c, 0x0a, 0x0a, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0x2a, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x20, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x65, 0x68, 0x73, 0x70, 0x68, 0x69, 0x6e, 0x78, 0x2f, 0x71, 0x75, 0x61, 0x73,
	0x61, 0x72, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_cmd_proto_rawDescOnce sync.Once
	file_v1_cmd_proto_rawDescData = file_v1_cmd_proto_rawDesc
)

func file_v1_cmd_proto_rawDescGZIP() []byte {
	file_v1_cmd_proto_rawDescOnce.Do(func() {
		file_v1_cmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_cmd_proto_rawDescData)
	})
	return file_v1_cmd_proto_rawDescData
}

var file_v1_cmd_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_v1_cmd_proto_goTypes = []interface{}{
	(*Command)(nil),                 // 0: quasar.v1.Command
	(*CommandResponse)(nil),         // 1: quasar.v1.CommandResponse
	(*Store)(nil),                   // 2: quasar.v1.Store
	(*StoreResponse)(nil),           // 3: quasar.v1.StoreResponse
	(*LatestUid)(nil),               // 4: quasar.v1.LatestUid
	(*LatestUidResponse)(nil),       // 5: quasar.v1.LatestUidResponse
	(*ResetCache)(nil),              // 6: quasar.v1.ResetCache
	(*ResetCacheResponse)(nil),      // 7: quasar.v1.ResetCacheResponse
	(*AppendEntriesRequest)(nil),    // 8: quasar.v1.AppendEntriesRequest
	(*RequestVoteRequest)(nil),      // 9: quasar.v1.RequestVoteRequest
	(*InstallSnapshotRequest)(nil),  // 10: quasar.v1.InstallSnapshotRequest
	(*TimeoutNowRequest)(nil),       // 11: quasar.v1.TimeoutNowRequest
	(*AppendEntriesResponse)(nil),   // 12: quasar.v1.AppendEntriesResponse
	(*RequestVoteResponse)(nil),     // 13: quasar.v1.RequestVoteResponse
	(*InstallSnapshotResponse)(nil), // 14: quasar.v1.InstallSnapshotResponse
	(*TimeoutNowResponse)(nil),      // 15: quasar.v1.TimeoutNowResponse
}
var file_v1_cmd_proto_depIdxs = []int32{
	2,  // 0: quasar.v1.Command.store:type_name -> quasar.v1.Store
	4,  // 1: quasar.v1.Command.latest_uid:type_name -> quasar.v1.LatestUid
	6,  // 2: quasar.v1.Command.reset_cache:type_name -> quasar.v1.ResetCache
	8,  // 3: quasar.v1.Command.append_entries:type_name -> quasar.v1.AppendEntriesRequest
	9,  // 4: quasar.v1.Command.request_vote:type_name -> quasar.v1.RequestVoteRequest
	10, // 5: quasar.v1.Command.install_snapshot:type_name -> quasar.v1.InstallSnapshotRequest
	11, // 6: quasar.v1.Command.timeout_now:type_name -> quasar.v1.TimeoutNowRequest
	3,  // 7: quasar.v1.CommandResponse.store:type_name -> quasar.v1.StoreResponse
	5,  // 8: quasar.v1.CommandResponse.latest_uid:type_name -> quasar.v1.LatestUidResponse
	7,  // 9: quasar.v1.CommandResponse.reset_cache:type_name -> quasar.v1.ResetCacheResponse
	12, // 10: quasar.v1.CommandResponse.append_entries:type_name -> quasar.v1.AppendEntriesResponse
	13, // 11: quasar.v1.CommandResponse.request_vote:type_name -> quasar.v1.RequestVoteResponse
	14, // 12: quasar.v1.CommandResponse.install_snapshot:type_name -> quasar.v1.InstallSnapshotResponse
	15, // 13: quasar.v1.CommandResponse.timeout_now:type_name -> quasar.v1.TimeoutNowResponse
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_v1_cmd_proto_init() }
func file_v1_cmd_proto_init() {
	if File_v1_cmd_proto != nil {
		return
	}
	file_v1_raft_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_cmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_cmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_cmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Store); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_cmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_cmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestUid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_cmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_cmd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_cmd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_cmd_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Command_Store)(nil),
		(*Command_LatestUid)(nil),
		(*Command_ResetCache)(nil),
		(*Command_AppendEntries)(nil),
		(*Command_RequestVote)(nil),
		(*Command_InstallSnapshot)(nil),
		(*Command_TimeoutNow)(nil),
	}
	file_v1_cmd_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*CommandResponse_Store)(nil),
		(*CommandResponse_LatestUid)(nil),
		(*CommandResponse_ResetCache)(nil),
		(*CommandResponse_AppendEntries)(nil),
		(*CommandResponse_RequestVote)(nil),
		(*CommandResponse_InstallSnapshot)(nil),
		(*CommandResponse_TimeoutNow)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_cmd_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_cmd_proto_goTypes,
		DependencyIndexes: file_v1_cmd_proto_depIdxs,
		MessageInfos:      file_v1_cmd_proto_msgTypes,
	}.Build()
	File_v1_cmd_proto = out.File
	file_v1_cmd_proto_rawDesc = nil
	file_v1_cmd_proto_goTypes = nil
	file_v1_cmd_proto_depIdxs = nil
}
